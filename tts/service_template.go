package tts

const serviceTemplate = `/* tslint:disable */

// This file has been generated by marwan.io/protoc-gen-tss.
// Do not edit.

import {
  createTwirpRequest,
  Fetch,
  throwTwirpError
} from './twirp'

{{ range .Services }}
{{ .Doc }}
export interface {{.Name}} {
	{{ range .Methods }}
	{{ .Doc }}
	{{ .Name }}: (request: {{.Input}}Properties, headers?: object) => Promise<{{.Output}}>
	{{ end }}
}

{{ .Doc }}
export class {{ .Name }}Client implements {{ .Name }} {
  private hostname: string
  private fetch: Fetch
  private path = '{{ .PathPrefix }}'

  constructor(hostname: string, fetch: Fetch) {
    this.hostname = hostname
    this.fetch = fetch
  }

  private url(name: string): string {
    return this.hostname + this.path + name
  }

  {{ range .Methods }}
  {{ .Doc }}
  public {{ .Name }}(request: {{ .Input }}Properties, headers: object = {}): Promise<{{ .Output }}> {
	const body = new {{ .Input }}(request)
    return this.fetch(
      this.url('{{ .Name | title }}'),
      createTwirpRequest(body, headers)
    ).then((res) => {
      if (!res.ok) {
        return throwTwirpError(res)
      }
      return res.json().then((m) => { return {{ .Output }}.fromJSON(m)})
    })
  }
  {{ end }} 
}
{{ end }}

{{ range .Enums }}
export enum {{ .Name }} {
	{{- range .Values }}
	{{ . }} = '{{ . }}',
	{{- end -}}
}
{{ end }}

{{ range .Messages }}
export interface {{ .Name }}Properties {
	{{- range .Fields }}
	{{ .Name }}?: {{ .PrintType }}
	{{- end }}
	toJSON?(): object
}

interface {{ .Name }}JSON {
	{{- range .Fields }}
	{{ .JSONName }}?: {{ .PrintType }}
	{{- end -}}
}

export class {{ .Name }} implements {{ .Name }}Properties {
  {{ range .Fields -}}
  {{ .Name }}: {{ .PrintType }}
  {{ end }}
	constructor(props?: {{ .Name }}Properties) {
		if (props) {
			{{- range .Fields }}
			this.{{ .Name }} = props.{{ .Name }}
			{{- end -}}
		}
	}

	static fromJSON(m: {{ .Name }}Properties = {}): {{ .Name }} {
		return new {{ .Name }}({
			{{- range .Fields }}
			{{ .Name }}: {{ .ResolveType }},
			{{- end -}}
		})
	}

	public toJSON(): {{ .Name }}JSON {
    return {
      {{- range .Fields }}
      '{{ .JSONName }}': this.{{ .Name }},
      {{- end -}}
    }
	}
}
{{ end }}
`
